Introduction
--------------------------------------------------

made by: Anthony Cobb
date created: 2022-8-2
last edited: 2022-8-2
version: 1


General
--------------------------------------------------

- Use C style comments.


Formatting
--------------------------------------------------

- Indents are spaces and must be 4 spaces wide.

- Do not put parentheses next to keywords. Put a space
between them.

if (something)
else if (something)
else (something)
for (int i = 0; i < 10; i++)

- Avoid using parentheses in return statments when not
necessary.

return 0;
return x * (y + 1);

- Do not put a space between function names and parentheses.
Always put parentheses next to function names.

int func_do_something()
{
    return 10;
}

func_do_something();

- Curly brackets should have its own line unless it can fit
in one line.

int do_something()
{
    int i;
    for (i = 0; i < 10; i++)
    {
        printf("%d\n", i);
    }
    return i;
}

int do_something_else() { return 0; }


File Naming
--------------------------------------------------

- C source files must end in ".c"
- C header files must end in ".h"
- C object files must end in ".o"

Use hyphens in place of spaces for file names.

"some-source-file.c"
"some-header-file.h"
"some-object-file.o"


Naming Conventions
--------------------------------------------------

- Constants

    Constants should be defined with their type. If you define a
    float with the value 10 assign it using "10.0f" instead of
    "10" which causes a float cast.
    
    int i = 10;
    long l = 10;
    float f = 10.0f;
    double d = 10.0;

- Macros

    Use ALL_CAPS seperated by an underscore:

    #define MY_MACRO 10
    
    If a macro's replacement is not just a literal, enclose it
    in parentheses:
    
    #define MY_MACRO (10 << 3)

- Types

    Avoid typedef-ing types unless the type is intended to
    be used as an opaque type.

    Names of types and members are lower_case seperated by an
    underscore.

    struct foo_bar
    {
        int a;
        int b;
        char *c;
        char *d;
    };

    union foo_bar
    {
        int a;
        double b;
        float c;
    };

    Enum values must be in all ALL_CAPS seperated by an
    underscore. Should

    enum foo
    {
        FOO_ONE,
        FOO_TWO,
        FOO_LAST
    };

- Functions

    Names of functions use lower_case seperated by an
    underscore.

    void cool_function();
